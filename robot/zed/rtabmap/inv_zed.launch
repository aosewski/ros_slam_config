<launch>
  <!-- Runs zed stereo camera in mapping mode with rtabmap on robot -->

  <!-- ===================================================================== -->
  <!-- CONSTANTS -->
  <arg name="pi_half"         value="1.5707963267948966"/>
  <arg name="pi"              value="3.1415926535897932"/>
  <arg name="optical_rotate"  value="0 0 0 -$(arg pi_half) 0 -$(arg pi_half)"/>
  <!-- ===================================================================== -->


  <!-- GENERAL ARGUMENTS -->
  <arg name="zed_namespace"       default="/camera"/>
  <arg name="base_frame_id"       default="camera_link"/>
  <!-- ===================================================================== -->

  <!-- ZED ARGUMENTS -->
  <!-- Select ZED camera resolution 
       '0': HD2K, '1': HD1080, '2': HD720, '3': VGA -->
  <arg name="zed_resolution"          default="2"/>
  <!-- Select depth map quality 
       '0': NONE, '1': PERFORMANCE, '2': MEDIUM, '3': QUALITY -->
  <arg name="zed_quality"             default="1"/>
  <!-- Select depth sensing mode 
       '0': FILL, '1': STANDARD -->
  <arg name="zed_sensing_mode"        default="1"/>
  <!-- Set ZED camera video framerate -->
  <arg name="zed_frame_rate"          default="60"/>
  <!-- Convert 32bit depth in meters to 16bit in millimeters 
       '0': 32bit float meters, '1': 16bit uchar millimeters-->
  <arg name="zed_openni_depth_mode"   default="1"/>
  <!-- The confidence value is mapped between 0 (high confidence threshold, 
       sparse data) and 100 (low confidence threshold, dense data). -->
  <arg name="zed_confidence"          default="80"/>

  <!-- STATIC TRANSFORMATIONS -->
  <node pkg="tf" type="static_transform_publisher" 
        name="camera_link_to_zed_initial_frame"
        args="$(arg optical_rotate) $(arg base_frame_id) zed_initial_frame 100"/>

  <node pkg="tf" type="static_transform_publisher" 
        name="zed_current_to_zed_left_camera"
        args="0 0 0 0 0 0 zed_current_frame ZED_left_camera 100"/>
  
  <!-- RUN ZED WRAPPER -->
  <group ns="${arg zed_namespace}">
    <node pkg="zed_wrapper" type="zed_wrapper_node" name="zed_wrapper_node">
      <param name="resolution"        type="int"  value="${arg zed_resolution}" />
      <param name="quality"           type="int"  value="${arg zed_quality}"/>
      <param name="sensing_mode"      type="int"  value="${arg zed_sensing_mode}"/>
      <param name="frame_rate"        type="int"  value="${arg zed_frame_rate}"/>
      <param name="openni_depth_mode" type="int"  value="${arg zed_openni_depth_mode}"/>
      <param name="confidence"        type="int"  value="${arg zed_confidence}"/>

      <!-- ROS topic names -->
      <param name="rgb_topic"             value="rgb/image_rect_color"/>
      <param name="rgb_raw_topic"         value="rgb/image_raw_color"/>
      <param name="rgb_cam_info_topic"    value="rgb/camera_info"/>

      <param name="left_topic"            value="left/image_rect_color"/>
      <param name="left_raw_topic"        value="left/image_raw_color"/>
      <param name="left_cam_info_topic"   value="left/camera_info"/>

      <param name="right_topic"           value="right/image_rect_color"/>
      <param name="right_raw_topic"       value="right/image_raw_color"/>
      <param name="right_cam_info_topic"  value="right/camera_info"/>

      <param name="depth_topic"           value="depth/depth_registered"/>
      <param name="depth_cam_info_topic"  value="depth/camera_info"/>

      <param name="point_cloud_topic"     value="point_cloud/cloud_registered"/>

      <param name="odometry_topic"        value="odom"/>
    </node>
  </group>
  <!-- ===================================================================== -->

  <!-- ROS URDF description of the ZED -->
  <param name="zed_description" textfile="$(find zed_wrapper)/urdf/zed.urdf"/>
  <node pkg="robot_state_publisher" type="state_publisher" 
        name="zed_state_publisher">
    <remap from="robot_description" to="zed_description"/>
  </node>
  <!-- ===================================================================== -->

  <!-- ZED TOPICS -->
  <arg name="zed_rgb_topic"           default="/${arg zed_namespace}/rgb/image_rect_color"/>
  <arg name="zed_depth_topic"         default="/${arg zed_namespace}/depth/depth_registered"/>
  <arg name="zed_camera_info_topic"   default="/${arg zed_namespace}/rgb/camera_info"/>
  <arg name="zed_odom_topic"          default="/${arg zed_namespace}/odom"/>



  <!-- ===================================================================== -->
  <!-- RTAB_MAP ARGUMENTS -->
  <!-- approx_sync:=false -->

  <!-- RTAB_MAP CONFIGURATION -->
  
  <!-- Corresponding config files -->
  <!-- To change RTAB-Map's parameters, set the path of config file (*.ini) 
       generated by the standalone app -->
  <arg name="cfg"                     default="" /> 
  
  <!-- Fixed frame id, you may set "base_link" or "base_footprint" if they 
       are published -->
  <arg name="frame_id"                default="${arg base_frame_id}"/>
  <!-- If set, TF is used to get odometry instead of the topic -->
  <arg name="odom_frame_id"           default=""/>
  <arg name="map_frame_id"            default="map"/>
  <arg name="rtabmap_namespace"       default="rtabmap"/>
  <arg name="database_path"           default="~/.ros/rtabmap.db"/>
  <arg name="queue_size"              default="10"/>
  <arg name="wait_for_transform"      default="0.2"/>
  <!-- delete_db_on_start, udebug -->
  <arg name="args"                    default="--delete_db_on_start"/>
  <!-- for debugging purpose, it fills launch-prefix tag of the nodes -->
  <arg name="launch_prefix"           default=""/>
  
  <!-- if timestamps of the input topics are synchronized using approximate 
       or exact time policy-->
  <arg name="approx_sync"  default="true"/>         
   
  <!-- RGB-D related topics -->
  <arg name="rgb_topic"               default="${arg zed_rgb_topic}" />
  <arg name="depth_topic"             default="${arg zed_depth_topic}" />
  <arg name="camera_info_topic"       default="${arg zed_camera_info_topic}" />
  
  <!-- If you want to subscribe to compressed image topics -->
  <arg name="compressed"              default="false"/>
  <!-- Common types: compressed, theora (see "rosrun image_transport list_transports") -->
  <arg name="rgb_image_transport"     default="compressed"/>    
  <!-- Common types: compressed, theora (see "rosrun image_transport list_transports") -->
  <arg name="depth_image_transport"   default="compressedDepth"/>  
   
  <arg name="subscribe_scan"          default="false"/>
  <arg name="scan_topic"              default="/scan"/>
  
  <arg name="subscribe_scan_cloud"    default="false"/>
  <arg name="scan_cloud_topic"        default="/scan_cloud"/>
   
  <!-- Launch rtabmap visual odometry node -->
  <arg name="visual_odometry"          default="false"/>
  <!-- Odometry topic used if visual_odometry is false -->
  <arg name="odom_topic"               default="${arg zed_odom_topic}"/>
  <arg name="vo_frame_id"              default="odom"/>
  <!-- If TF is used to get odometry, this is the default angular variance -->
  <arg name="odom_tf_angular_variance" default="1"/>
  <!-- If TF is used to get odometry, this is the default linear variance -->
  <arg name="odom_tf_linear_variance"  default="1"/>
  <arg name="odom_args"                default="$(arg args)"/>
  
  <!-- These arguments should not be modified directly, see referred topics without "_relay" suffix above -->
  <arg     if="$(arg compressed)" name="rgb_topic_relay"           default="$(arg rgb_topic)_relay"/>
  <arg unless="$(arg compressed)" name="rgb_topic_relay"           default="$(arg rgb_topic)"/>
  <arg     if="$(arg compressed)" name="depth_topic_relay"         default="$(arg depth_topic)_relay"/>
  <arg unless="$(arg compressed)" name="depth_topic_relay"         default="$(arg depth_topic)"/>
  <arg     if="$(arg compressed)" name="left_image_topic_relay"    default="$(arg left_image_topic)_relay"/>
  <arg unless="$(arg compressed)" name="left_image_topic_relay"    default="$(arg left_image_topic)"/>
  <arg     if="$(arg compressed)" name="right_image_topic_relay"   default="$(arg right_image_topic)_relay"/>
  <arg unless="$(arg compressed)" name="right_image_topic_relay"   default="$(arg right_image_topic)"/>

  <!-- Nodes -->
  <group ns="$(arg rtabmap_namespace)">
  
    <!-- RGB-D Odometry -->
    <node if="$(arg compressed)" name="republish_rgb" type="republish" 
          pkg="image_transport" args="$(arg rgb_image_transport) in:=$(arg rgb_topic) raw out:=$(arg rgb_topic_relay)"/>
    <node if="$(arg compressed)" name="republish_depth" type="republish" 
          pkg="image_transport" args="$(arg depth_image_transport) in:=$(arg depth_topic) raw out:=$(arg depth_topic_relay)"/>

    <node if="$(arg visual_odometry)" pkg="rtabmap_ros" type="rgbd_odometry" 
          name="rgbd_odometry" output="screen" args="$(arg odom_args)" 
          launch-prefix="$(arg launch_prefix)">
      <remap from="rgb/image"       to="$(arg rgb_topic_relay)"/>
      <remap from="depth/image"     to="$(arg depth_topic_relay)"/>
      <remap from="rgb/camera_info" to="$(arg camera_info_topic)"/>
  
      <param name="frame_id"                    type="str"    value="$(arg frame_id)"/>
      <param name="odom_frame_id"               type="str"    value="$(arg vo_frame_id)"/>
      <param name="wait_for_transform_duration" type="double" value="$(arg wait_for_transform)"/>
      <param name="approx_sync"                 type="bool"   value="$(arg approx_sync)"/>
      <param name="config_path"                 type="str"    value="$(arg cfg)"/>
      <param name="queue_size"                  type="int"    value="$(arg queue_size)"/>
    </node>
    
    <!-- Visual SLAM (robot side) -->
    <!-- args: "delete_db_on_start" and "udebug" -->
    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" 
          args="$(arg args)" launch-prefix="$(arg launch_prefix)">
      <param name="subscribe_depth"      type="bool"   value="true"/>
      <param name="subscribe_scan"       type="bool"   value="$(arg subscribe_scan)"/>
      <param name="subscribe_scan_cloud" type="bool"   value="$(arg subscribe_scan_cloud)"/>
      <param name="frame_id"             type="str"    value="$(arg frame_id)"/>
      <param name="map_frame_id"         type="str"    value="$(arg map_frame_id)"/>
      <param name="odom_frame_id"        type="str"    value="$(arg odom_frame_id)"/>
      <param name="odom_tf_angular_variance" type="double" value="$(arg odom_tf_angular_variance)"/>
      <param name="odom_tf_linear_variance"  type="double" value="$(arg odom_tf_linear_variance)"/>
      <param name="wait_for_transform_duration"  type="double"   value="$(arg wait_for_transform)"/>
      <param name="database_path"        type="str" value="$(arg database_path)"/>
      <param name="approx_sync"          type="bool"   value="$(arg approx_sync)"/>
      <param name="config_path"          type="str" value="$(arg cfg)"/>
      <param name="queue_size"           type="int" value="$(arg queue_size)"/>
      
      <remap from="rgb/image"       to="$(arg rgb_topic_relay)"/>
      <remap from="depth/image"     to="$(arg depth_topic_relay)"/>
      <remap from="rgb/camera_info" to="$(arg camera_info_topic)"/>
  
      <remap from="scan"                   to="$(arg scan_topic)"/>
      <remap from="scan_cloud"             to="$(arg scan_cloud_topic)"/>
      <remap unless="$(arg visual_odometry)" from="odom"  to="$(arg odom_topic)"/>

      <!-- localization mode -->
      <param name="Mem/IncrementalMemory"   type="str" value="true"/>
      <param name="Mem/InitWMWithAllNodes"  type="str" value="$(arg localization)"/>
    </node>
  </group>
  <!-- ===================================================================== -->
</launch>