<launch>  

  <!-- This launch assumes that you have already 
       started you preferred RGB-D sensor and your IMU.
       TF between frame_id and the sensors should already be set too. -->
       
  <arg name="frame_id"/>
  <arg name="rgb_topic"/>
  <arg name="depth_topic"/>
  <arg name="camera_info_topic"/>
  <arg name="imu_topic"/>
  <arg name="imu_ignore_acc"/>
  <arg name="imu_remove_gravitational_acceleration"/>
  
  <arg name="approx_sync" default="true"/>
  <arg name="compressed"  default="false"/>

  <!-- Common types: compressed, theora (see "rosrun image_transport list_transports") -->
  <arg name="rgb_image_transport"     default="compressed"/>    
  <!-- Common types: compressed, theora (see "rosrun image_transport list_transports") -->
  <arg name="depth_image_transport"   default="compressedDepth"/>  

  <arg if="$(arg compressed)"     name="rgb_topic_relay"   default="$(arg rgb_topic)_relay"/>
  <arg unless="$(arg compressed)" name="rgb_topic_relay"   default="$(arg rgb_topic)"/>
  <arg if="$(arg compressed)"     name="depth_topic_relay" default="$(arg depth_topic)_relay"/>
  <arg unless="$(arg compressed)" name="depth_topic_relay" default="$(arg depth_topic)"/>

  <!-- Localization-only mode -->
  <arg name="localization"      default="false"/>
  <arg     if="$(arg localization)" name="rtabmap_args"  default=""/>
  <!--
    udebug": Show RTAB-Map's debug/info/warning/error logs.
    uinfo": Show RTAB-Map's info/warning/error logs. 
    -->
  <arg unless="$(arg localization)" name="rtabmap_args"  
    default="--delete_db_on_start"/>  

   <!-- ODOMETRY MAIN ARGUMENTS: 
        -"strategy"        : Strategy: Frame-to-Map 1=Frame-To-Frame
        -"feature"         : Feature type: 0=SURF 1=SIFT 2=ORB 3=FAST/FREAK 
                              4=FAST/BRIEF 5=GFTT/FREAK 6=GFTT/BRIEF 7=BRISK
        -"nn"              : Nearest neighbor strategy : 0=Linear, 1=FLANN_KDTREE, 
                              2=FLANN_LSH, 3=BRUTEFORCE 4=BRUTEFORCE_GPU
                             Set to 1 for float descriptor like SIFT/SURF                  
                             Set to 3 for binary descriptor like ORB/FREAK/BRIEF/BRISK  
        -"max_depth"       : Maximum features depth (m)  
        -"min_inliers"     : Minimum visual correspondences to accept a transformation (m) 
        -"inlier_distance" : RANSAC maximum inliers distance (m)  
        -"local_map"       : Local map size: number of unique features to keep track 
        -"odom_info_data"  : Fill odometry info messages with inliers/outliers data.
        -"correspondence"  : 0=Features Matching, 1=Optical Flow -->
    -->
  <arg name="strategy"            default="1"/>
  <!--2=ORB działa całkiem sprawnie przy Frame-To-Frame i Feature Maching-->
  <arg name="feature"             default="2"/>
  <arg name="nn"                  default="3"/>
  <arg name="max_depth"           default="5.0"/>
  <arg name="min_inliers"         default="10"/>
  <arg name="inlier_distance"     default="0.02"/>
  <arg name="local_map"           default="700"/>
  <arg name="gftt_max_corners"    default="700"/>
  <arg name="gftt_min_distance"   default="7"/>
  <arg name="correspondence"      default="1"/>
  <!--Motion estimation approach: 0:3D->3D, 1:3D->2D (PnP), 2:2D->2D (Epipolar 
      Geometry)-->
  <arg name="motion_estimation"   default="0"/>

  <group ns="rtabmap">
    <node if="$(arg compressed)" name="republish_rgb"   type="republish" 
      pkg="image_transport" args="$(arg rgb_image_transport) in:=$(arg rgb_topic) raw out:=$(arg rgb_topic_relay)"/>
    <node if="$(arg compressed)" name="republish_depth" type="republish" 
      pkg="image_transport" args="$(arg depth_image_transport) in:=$(arg depth_topic) raw out:=$(arg depth_topic_relay)"/>

  <!-- Visual Odometry -->
  <node pkg="rtabmap_ros" type="rgbd_odometry" name="visual_odometry" 
    output="screen" args="$(arg rtabmap_args)">

    <remap from="rgb/image"       to="$(arg rgb_topic_relay)"/>
    <remap from="depth/image"     to="$(arg depth_topic_relay)"/>
    <remap from="rgb/camera_info" to="$(arg camera_info_topic)"/>
    <remap from="odom"            to="/vo"/>

    <param name="frame_id"               type="string" value="$(arg frame_id)"/>
    <!--whether to publish /map -> /odom transform-->
    <param name="publish_tf"             type="bool"   value="false"/>
    <param name="publish_null_when_lost" type="bool"   value="true"/>
    <param name="guess_from_tf"          type="bool"   value="false"/>
    <param name="approx_sync"            type="bool"   value="$(arg approx_sync)"/>

      <param name="Odom/FillInfoData"     type="string" value="true"/>
      <param name="Odom/Strategy"         type="string" value="$(arg strategy)"/> 
      <!--<param name="Odom/ImageDecimation"  type="string" value="-4"/>-->
      <param name="OdomF2M/MaxSize"       type="string" value="$(arg local_map)"/>
      <!--Automatically reset odometry after X consecutive images on which odometry 
           cannot be computed (value=0 disables auto-reset)-->
      <param name="Odom/ResetCountdown"   type="int"    value="2"/>
      <param name="Odom/ImageBufferSize"  type="int"   value="0"/>

      <param name="Vis/EstimationType"  type="int"    value="$(arg motion_estimation)"/>
      <param name="Vis/FeatureType"     type="string" value="$(arg feature)"/>  
      <param name="Vis/CorType"                       value="$(arg correspondence)"/> 
      <param name="Vis/CorNNType"       type="string" value="$(arg nn)"/>
      <!--[Vis/CorType=0] Matching window size (pixels) around projected points when a
          guess transform is provided to find correspondences. 0 means disabled.]-->
      <!--<param name="Vis/CorGuessWinSize" type="int"  value=20/>-->
      <param name="Vis/MaxDepth"        type="string" value="$(arg max_depth)"/>  
      <param name="Vis/MinInliers"      type="string" value="$(arg min_inliers)"/> 
      <param name="Vis/InlierDistance"  type="string" value="$(arg inlier_distance)"/>     
      <param name="Vis/MaxFeatures"     type="string" value="$(arg gftt_max_corners)"/>
      <param name="GFTT/MinDistance"    type="string" value="$(arg gftt_min_distance)"/>
      <param name="Kp/DetectorStrategy" type="string" value="$(arg feature)"/>
    </node>

    <!-- SLAM -->
    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" 
      args="$(arg rtabmap_args)">
      
      <param name="frame_id"        type="string" value="$(arg frame_id)"/>
      <param name="subscribe_depth" type="bool"   value="true"/>
      <param name="approx_sync"     type="bool"   value="$(arg approx_sync)"/>
      <param name="queue_size"      type="int"    value="10"/>
 
      <remap from="rgb/image"       to="$(arg rgb_topic_relay)"/>
      <remap from="depth/image"     to="$(arg depth_topic_relay)"/>
      <remap from="rgb/camera_info" to="$(arg camera_info_topic)"/>
      <remap from="odom"            to="/odometry/filtered"/>
      
      <!-- RTAB-Map's parameters -->
      <!--Decimation of the depth image before creating cloud. Negative decimation is done 
          from RGB size instead of depth size (if depth is smaller than RGB, it may be 
          interpolated depending of the decimation value)-->
      <!--<param name="Grid/DepthDecimation"    type="string" value="1"/>-->
      <param name="GFTT/MinDistance"        type="string" value="$(arg gftt_min_distance)"/>
      <!--<param name="Mem/ImagePreDecimation"  type="string" value="-2"/>-->
      <!--<param name="Mem/ImagePostDecimation" type="string" value="-2"/>-->
      <param name="Mem/RehearsalSimilarity" type="string" value="0.45"/>

      <param name="Mem/STMSize"             type="int"    value="15"/>
      <!-- On merge, update to new id. When false, no copy. -->
      <param name="Mem/RehearsalIdUpdatedToNewOne"  type="bool" value="true"/>
      <!-- ignore images with little or no features  -->
      <param name="Mem/BadSignaturesIgnored"        type="bool" value="true"/>

      <param name="Kp/DetectorStrategy"     type="string" value="$(arg feature)"/>
      <!--<param name="Kp/MaxFeatures"          type="string" value="0"/>-->

      <param name="Vis/EstimationType"  type="int"    value="$(arg motion_estimation)"/>
      <param name="Vis/MinInliers"      type="string" value="$(arg min_inliers)"/>
      <param name="Vis/InlierDistance"  type="string" value="$(arg inlier_distance)"/>
      <param name="Vis/MaxFeatures"     type="string" value="$(arg gftt_max_corners)"/>
      <param name="RGBD/AngularUpdate"  type="string" value="0.01"/>
      <param name="RGBD/LinearUpdate"   type="string" value="0.01"/>
      
      <!-- enable/disable map creation -->
      <param name="RGBD/Enabled"        type="bool"   value="true"/>
      
      <!-- Reject loop closures if optimization error is greater than this value 
          (0=disabled). This will help to detect when a wrong loop closure is added to 
          the graph. Not compatible with "Optimizer/Robust" if enabled -->
      <param name="RGBD/OptimizeMaxError" type="int"  value="1"/>

      <!--Optimize graph from the newest node. If false, the graph is optimized 
        from the oldest node of the current graph (this adds an overhead computation 
        to detect to oldest mode of the current graph, but it can be useful to preserve 
        the map referential from the oldest node). Warning when set to false: when some
        nodes are transferred, the first referential of the local map may change, 
        resulting in momentary changes in robot/map position (which are annoying in 
        teleoperation)-->
      <param name="RGBD/OptimizeFromGraphEnd" type="string" value="true"/>
      
      <!--Extract features even if there are some already in the nodes.-->
      <!--<param name="RGBD/LoopClosureReextractFeatures" type="string" value="true"/>-->
      <!--Maximum time allowed for the detector (ms) (0 means infinity)-->
      <param name="Rtabmap/TimeThr"           type="string" value="0"/>
      
      <!-- process all images -->
      <param name="Rtabmap/ImageBufferSize"   type="int" value="0"/> 
      <!-- 0 means process as fast as camera publishes images -->
      <param name="Rtabmap/DetectionRate"     type="int" value="5"/>

      <!--Graph optimization strategy: 0=TORO, 1=g2o and 2=GTSAM.-->
      <param name="Optimizer/Strategy"        type="int" value="1"/>
      <!-- Robust graph optimization using Vertigo (only work for g2o and GTSAM 
           optimization strategies). Not compatible with "RGBD/OptimizeMaxError" if 
           enabled.-->
      <!--<param name="Optimizer/Robust"          type="bool" value="true"/>-->

      <!-- localization mode -->
      <param name="Mem/InitWMWithAllNodes" type="string" value="$(arg localization)"/> 
      <param     if="$(arg localization)" name="Mem/IncrementalMemory" type="string" 
        value="false"/>
      <param unless="$(arg localization)" name="Mem/IncrementalMemory" type="string" 
        value="true"/>
    </node>
  </group>

  <!-- Odometry fusion (EKF), refer to demo launch file in robot_localization for more 
       info -->
  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization" 
    clear_params="true" output="screen">

      <param name="frequency"       value="50"/>
      <param name="sensor_timeout"  value="0.1"/>
      <param name="two_d_mode"      value="false"/>

      <param name="odom_frame"      value="odom"/>
      <param name="base_link_frame" value="$(arg frame_id)"/>
      <param name="world_frame"     value="odom"/>

      <param name="transform_time_offset" value="0.0"/>

      <param name="odom0"           value="/vo"/>
      <param name="imu0"            value="$(arg imu_topic)"/> 

      <!-- The order of the values is x, y, z, roll, pitch, yaw, vx, vy, vz, i
           vroll, vpitch, vyaw, ax, ay, az. -->
      <rosparam param="odom0_config">[true, true, true,
                                      false, false, false,
                                      true, true, true,
                                      false, false, false,
                                      false, false, false]</rosparam>
      
      <rosparam     if="$(arg imu_ignore_acc)" param="imu0_config">[
                                     false,  false,  false,
                                      true,  true,   true,
                                     false,  false,  false,
                                      true,  true,   true,
                                     false, false,  false] </rosparam>
      <rosparam unless="$(arg imu_ignore_acc)" param="imu0_config">[
                                     <!--false,  false,  false,-->
                                     true,  true,  true,
                                     true,  true,  true,
                                     <!--false,  false,  false,-->
                                     true,  true,  true,
                                     true,  true,  true,
                                     true,  true,  true] </rosparam>  
      
      <!-- ======== ADVANCED PARAMETERS ======== -->
      <!-- [ADVANCED] When measuring one pose variable with two sensors, a situation can 
        arise in which both sensors underreport their covariances. This can lead to the 
        filter rapidly jumping back and forth between each measurement as they arrive. In 
        these cases, it often makes sense to (a) correct the measurement covariances, or 
        (b) if velocity is also measured by one of the sensors, let one sensor measure 
        pose, and the other velocity. However, doing (a) or (b) isn't always feasible, 
        and so we expose the differential parameter. When differential mode is enabled, 
        all absolute pose data is converted to velocity data by differentiating the 
        absolute pose measurements. These velocities are then integrated as usual. NOTE: 
        this only applies to sensors that provide pose measurements; setting differential 
        to true for twist measurements has no effect. -->
      <param name="odom0_differential" value="false"/>
      <param name="imu0_differential"  value="false"/>

      <!-- [ADVANCED] When the node starts, if this parameter is true, then the first 
      measurement is treated as a "zero point" for all future measurements. While you can 
      achieve the same effect with the differential paremeter, the key difference is that 
      the relative parameter doesn't cause the measurement to be converted to a velocity 
      before integrating it. If you simply want your measurements to start at 0 for a give
      sensor, set this to true. -->
      <param name="odom0_relative" value="true"/>
      <param name="imu0_relative"  value="true"/>

      <param name="imu0_remove_gravitational_acceleration" 
        value="$(arg imu_remove_gravitational_acceleration)"/>

      <param name="print_diagnostics" value="true"/>
      <param name="odom0_queue_size" value="50"/>
      <param name="imu0_queue_size" value="50"/>

      <!-- The values are ordered as x, y, z, roll, pitch, yaw, vx, vy, vz,
           vroll, vpitch, vyaw, ax, ay, az. -->
      <rosparam param="process_noise_covariance">[0.005, 0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                                                  0,    0.005, 0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                                                  0,    0,    0.006, 0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                                                  0,    0,    0,    0.003, 0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                                                  0,    0,    0,    0,    0.003, 0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                                                  0,    0,    0,    0,    0,    0.006, 0,     0,     0,    0,    0,    0,    0,    0,    0,
                                                  0,    0,    0,    0,    0,    0,    0.0025, 0,     0,    0,    0,    0,    0,    0,    0,
                                                  0,    0,    0,    0,    0,    0,    0,     0.0025, 0,    0,    0,    0,    0,    0,    0,
                                                  0,    0,    0,    0,    0,    0,    0,     0,     0.004, 0,    0,    0,    0,    0,    0,
                                                  0,    0,    0,    0,    0,    0,    0,     0,     0,    0.001, 0,    0,    0,    0,    0,
                                                  0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0.001, 0,    0,    0,    0,
                                                  0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0.002, 0,    0,    0,
                                                  0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0.001, 0,    0,
                                                  0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0.001, 0,
                                                  0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0.0015]</rosparam>

      <!-- The values are ordered as x, y,
           z, roll, pitch, yaw, vx, vy, vz, vroll, vpitch, vyaw, ax, ay, az. -->
           <rosparam param="initial_estimate_covariance">[1e-9, 0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                                                          0,    1e-9, 0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                                                          0,    0,    1e-9, 0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                                                          0,    0,    0,    1e-9, 0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                                                          0,    0,    0,    0,    1e-9, 0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                                                          0,    0,    0,    0,    0,    1e-9, 0,    0,    0,    0,     0,     0,     0,    0,    0,
                                                          0,    0,    0,    0,    0,    0,    1e-9, 0,    0,    0,     0,     0,     0,    0,    0,
                                                          0,    0,    0,    0,    0,    0,    0,    1e-9, 0,    0,     0,     0,     0,    0,    0,
                                                          0,    0,    0,    0,    0,    0,    0,    0,    1e-9, 0,     0,     0,     0,    0,    0,
                                                          0,    0,    0,    0,    0,    0,    0,    0,    0,    1e-9,  0,     0,     0,    0,    0,
                                                          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     1e-9,  0,     0,    0,    0,
                                                          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     1e-9,  0,    0,    0,
                                                          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     1e-9, 0,    0,
                                                          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    1e-9, 0,
                                                          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    1e-9]</rosparam>

    </node>
</launch>
